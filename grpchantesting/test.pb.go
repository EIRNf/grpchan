// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package __grpchantesting is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Message
	HelloRequest
	HelloReply
*/
package grpchantesting

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import _ "github.com/golang/protobuf/ptypes/empty"

import protoreflect "google.golang.org/protobuf/reflect/protoreflect"
import 	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Payload      []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Count        int32                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Code         int32                  `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
	DelayMillis  int32                  `protobuf:"varint,4,opt,name=delay_millis,json=delayMillis" json:"delay_millis,omitempty"`
	Headers      map[string][]byte      `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Trailers     map[string][]byte      `protobuf:"bytes,6,rep,name=trailers" json:"trailers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ErrorDetails []*google_protobuf.Any `protobuf:"bytes,7,rep,name=error_details,json=errorDetails" json:"error_details,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Message) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Message) GetDelayMillis() int32 {
	if m != nil {
		return m.DelayMillis
	}
	return 0
}

func (m *Message) GetHeaders() map[string][]byte {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Message) GetTrailers() map[string][]byte {
	if m != nil {
		return m.Trailers
	}
	return nil
}

func (m *Message) GetErrorDetails() []*google_protobuf.Any {
	if m != nil {
		return m.ErrorDetails
	}
	return nil
}

var file_grpchantesting_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_grpchantesting_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	// proto.RegisterType((*Message)(nil), "grpchantesting.Message")
	proto.RegisterType((*HelloRequest)(nil), "grpchantesting.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "grpchantesting.HelloReply")
}

// func init() { file_grpchantesting_test_proto_init() }
// func file_grpchantesting_test_proto_init() {
// 	if File_grpchantesting_test_proto != nil {
// 		return
// 	}
// 	if !protoimpl.UnsafeEnabled {
// 		file_grpchantesting_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
// 			switch v := v.(*Message); i {
// 			case 0:
// 				return &v.state
// 			case 1:
// 				return &v.sizeCache
// 			case 2:
// 				return &v.unknownFields
// 			default:
// 				return nil
// 			}
// 		}
// 	}
// 	type x struct{}
// 	out := protoimpl.TypeBuilder{
// 		File: protoimpl.DescBuilder{
// 			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
// 			RawDescriptor: file_grpchantesting_test_proto_rawDesc,
// 			NumEnums:      0,
// 			NumMessages:   3,
// 			NumExtensions: 0,
// 			NumServices:   1,
// 		},
// 		GoTypes:           file_grpchantesting_test_proto_goTypes,
// 		DependencyIndexes: file_grpchantesting_test_proto_depIdxs,
// 		MessageInfos:      file_grpchantesting_test_proto_msgTypes,
// 	}.Build()
// 	File_grpchantesting_test_proto = out.File
// 	file_grpchantesting_test_proto_rawDesc = nil
// 	file_grpchantesting_test_proto_goTypes = nil
// 	file_grpchantesting_test_proto_depIdxs = nil
// }


func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x41, 0x4f, 0xdb, 0x30,
	0x14, 0x56, 0x08, 0xa5, 0xec, 0x35, 0x4c, 0xc8, 0x42, 0x23, 0xcb, 0x76, 0xe8, 0xaa, 0x6d, 0xea,
	0x29, 0x20, 0x76, 0x19, 0x20, 0x4d, 0xa2, 0xa3, 0xd2, 0x76, 0xe0, 0x92, 0x96, 0xcb, 0x2e, 0xc8,
	0x34, 0x6f, 0xc1, 0x9a, 0x63, 0x67, 0xb6, 0xcb, 0xe6, 0x1f, 0x34, 0xed, 0x6f, 0x4e, 0xb6, 0xd3,
	0x89, 0x82, 0x72, 0x80, 0xdb, 0x7b, 0xef, 0xfb, 0xde, 0xf7, 0x3e, 0x7f, 0x6d, 0x00, 0x0c, 0x6a,
	0x93, 0x37, 0x4a, 0x1a, 0x49, 0x9e, 0x57, 0xaa, 0x59, 0xdc, 0x50, 0xe1, 0x46, 0x4c, 0x54, 0xd9,
	0xcb, 0x4a, 0xca, 0x8a, 0xe3, 0x81, 0x47, 0xaf, 0x97, 0xdf, 0x0f, 0xa8, 0xb0, 0x81, 0x9a, 0xbd,
	0xba, 0x0f, 0x61, 0xdd, 0x98, 0x16, 0x1c, 0xfd, 0x8d, 0xa1, 0x7f, 0x81, 0x5a, 0xd3, 0x0a, 0x49,
	0x0a, 0xfd, 0x86, 0x5a, 0x2e, 0x69, 0x99, 0x46, 0xc3, 0x68, 0x9c, 0x14, 0xab, 0x96, 0xec, 0x41,
	0x6f, 0x21, 0x97, 0xc2, 0xa4, 0x1b, 0xc3, 0x68, 0xdc, 0x2b, 0x42, 0x43, 0x08, 0x6c, 0x2e, 0x64,
	0x89, 0x69, 0xec, 0x87, 0xbe, 0x26, 0x6f, 0x20, 0x29, 0x91, 0x53, 0x7b, 0x55, 0x33, 0xce, 0x99,
	0x4e, 0x37, 0x3d, 0x36, 0xf0, 0xb3, 0x0b, 0x3f, 0x22, 0x9f, 0xa0, 0x7f, 0x83, 0xb4, 0x44, 0xa5,
	0xd3, 0xde, 0x30, 0x1e, 0x0f, 0x8e, 0xde, 0xe6, 0xeb, 0x8f, 0xc9, 0x5b, 0x43, 0xf9, 0x97, 0x40,
	0x9b, 0x0a, 0xa3, 0x6c, 0xb1, 0x5a, 0x22, 0x67, 0xb0, 0x6d, 0x14, 0x65, 0xdc, 0x09, 0x6c, 0x79,
	0x81, 0x77, 0x5d, 0x02, 0xf3, 0x96, 0x17, 0x14, 0xfe, 0xaf, 0x91, 0x63, 0xd8, 0x41, 0xa5, 0xa4,
	0xba, 0x2a, 0xd1, 0x50, 0xc6, 0x75, 0xda, 0xf7, 0x3a, 0x7b, 0x79, 0x88, 0x2a, 0x5f, 0x45, 0x95,
	0x9f, 0x09, 0x5b, 0x24, 0x9e, 0x7a, 0x1e, 0x98, 0xd9, 0x09, 0x24, 0x77, 0x6d, 0x91, 0x5d, 0x88,
	0x7f, 0xa0, 0xf5, 0x81, 0x3d, 0x2b, 0x5c, 0xe9, 0xc2, 0xba, 0xa5, 0x7c, 0x89, 0x3e, 0xac, 0xa4,
	0x08, 0xcd, 0xc9, 0xc6, 0xc7, 0x28, 0x3b, 0x85, 0x9d, 0x35, 0x47, 0x8f, 0x59, 0x1e, 0x8d, 0xdc,
	0x61, 0xce, 0x65, 0x81, 0x3f, 0x97, 0xa8, 0x7d, 0xfa, 0x82, 0xd6, 0xd8, 0x2e, 0xfb, 0x7a, 0xf4,
	0x1e, 0xa0, 0xe5, 0x34, 0xdc, 0xba, 0xdf, 0xb3, 0x0e, 0x41, 0xb4, 0xa4, 0x55, 0x7b, 0xf4, 0x27,
	0x86, 0xc1, 0x1c, 0xb5, 0x99, 0xa1, 0xba, 0x65, 0x0b, 0x24, 0xc7, 0xd0, 0xbb, 0x14, 0x54, 0x59,
	0xb2, 0xdf, 0x91, 0x64, 0xd6, 0x05, 0x90, 0x73, 0xd8, 0x9e, 0x51, 0xeb, 0xaf, 0x92, 0xd7, 0xf7,
	0x49, 0x77, 0x0d, 0x67, 0x59, 0x07, 0xea, 0xac, 0x4e, 0x20, 0xf9, 0xcc, 0x19, 0x0a, 0x33, 0x33,
	0x0a, 0x69, 0xfd, 0x78, 0x1f, 0xe3, 0xc8, 0x69, 0xb8, 0xf7, 0xa0, 0x7a, 0xaa, 0xc6, 0xa1, 0xd3,
	0x80, 0x09, 0x2b, 0xd9, 0xd3, 0x5d, 0x1c, 0x46, 0xe4, 0x2b, 0xec, 0x5f, 0x6a, 0x9c, 0xfe, 0x36,
	0xa8, 0x04, 0xe5, 0x2d, 0x32, 0xff, 0xe5, 0x72, 0x7e, 0xf1, 0xe0, 0x0f, 0x36, 0x75, 0xdf, 0x62,
	0xd6, 0x31, 0x9f, 0x90, 0x6f, 0xbb, 0xf9, 0xe9, 0xfa, 0xa9, 0xeb, 0x2d, 0xcf, 0xf9, 0xf0, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x6a, 0xef, 0xe1, 0x92, 0x0e, 0x04, 0x00, 0x00,
}
