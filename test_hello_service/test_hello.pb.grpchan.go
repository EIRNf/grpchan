// Code generated by protoc-gen-grpchan. DO NOT EDIT.
// source: test_hello.proto

package test_hello_service

import "context"
import "github.com/fullstorydev/grpchan"
import "google.golang.org/grpc"

// Deprecated: Use RegisterTestServiceServer instead.
func RegisterHandlerTestService(reg grpchan.ServiceRegistry, srv TestServiceServer) {
	reg.RegisterService(&TestService_ServiceDesc, srv)
}

type testServiceChannelClient struct {
	ch grpc.ClientConnInterface
}

// Deprecated: Use NewTestServiceClient instead.
func NewTestServiceChannelClient(ch grpc.ClientConnInterface) TestServiceClient {
	return &testServiceChannelClient{ch: ch}
}

func (c *testServiceChannelClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.ch.Invoke(ctx, "/test_hello_service.TestService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceChannelClient) SayGoodbye(ctx context.Context, in *GoodbyeRequest, opts ...grpc.CallOption) (*GoodbyeReply, error) {
	out := new(GoodbyeReply)
	err := c.ch.Invoke(ctx, "/test_hello_service.TestService/SayGoodbye", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
